version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: aether_agents
      POSTGRES_USER: aether_user
      POSTGRES_PASSWORD: aether_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aether_user -d aether_agents"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      POSTGRES_SERVER: postgres
      POSTGRES_DB: aether_agents
      POSTGRES_USER: aether_user
      POSTGRES_PASSWORD: aether_password
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery-worker:
    build: .
    command: celery -A app.core.celery_app worker --loglevel=info
    environment:
      POSTGRES_SERVER: postgres
      POSTGRES_DB: aether_agents
      POSTGRES_USER: aether_user
      POSTGRES_PASSWORD: aether_password
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    command: celery -A app.core.celery_app beat --loglevel=info
    environment:
      POSTGRES_SERVER: postgres
      POSTGRES_DB: aether_agents
      POSTGRES_USER: aether_user
      POSTGRES_PASSWORD: aether_password
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app

  # Celery Flower (Monitoring)
  celery-flower:
    build: .
    command: celery -A app.core.celery_app flower
    ports:
      - "5555:5555"
    environment:
      POSTGRES_SERVER: postgres
      POSTGRES_DB: aether_agents
      POSTGRES_USER: aether_user
      POSTGRES_PASSWORD: aether_password
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-change-in-production
    depends_on:
      - redis
      - celery-worker

volumes:
  postgres_data: